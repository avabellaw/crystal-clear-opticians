/* html {
    font-size:14px;
}

@media screen and (min-width:768px){
    html {
        font-size: 15px;
    }
}

@media screen and (min-width:992px){
    html {
        font-size: 16px;
    }
} */

body {
    --body-bg-colour: #fff1f1;
    font-family: 'Lora';
    background-color: var(--body-bg-colour);
    font-size: calc(0.75rem + .65vw);

    /* Height variables */
    --page-header-height: 15vh;
    --navbar-min-height: 12vh;
    --section-vertical-margins: 1rem;

    /* If there isn't enough content, there is whitespace below the footer. I made this so that the middle section grows to fill that space using flexbox. */
    min-height: 100vh;
    flex-direction: column;
    display: flex;
    justify-content: space-between;
}

header {
    font-size: calc(0.68rem + .65vw);
}

/* All header sizes I'm expecting to use currently set to default overriding bootstrap (also using rem instead of em)*/
/* h1 {
    --h1-default-size: 1.8rem;
    font-size: var(--h1-default-size);
}
*/

.page-header {
    height: var(--page-header-height);
    display: flex;
    justify-content: center;
    align-items: center;
    /* margin-bottom: 0.8rem; */
    text-transform: capitalize;
}

@media screen and (min-width:576px) {
    body {
        --page-header-height: 24vh;
    }

    .page-header {
        display: flex;
        justify-content: center;
        align-items: center;
        padding-bottom: 2vh;
    }
}

/* Apply to div as a base class for creating a background image */
.bg-img {
    background-color: rgb(255, 247, 248);
    position: absolute;
    background-size: cover;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

/* 
    Information mark (<detail> and <summary>) styles 
*/

.info-mark p {
    margin-bottom: 1.8em;
    margin-top: 1.15em;
    box-shadow: 0px 0px 15px 1px #eca9e08f inset;
    padding: 0.8em;
    border-radius: 10px;
    background-color: #fff0ff;
    position: absolute;
    right: 0;
    left: 0;
    width: 100%;
}

.info-mark {
    margin: 0.8em 0;
    position: relative;
}

.info-mark>summary {
    /* Remove arrow marker next to <summary> [https://stackoverflow.com/questions/6195329/how-can-you-hide-the-arrow-that-is-displayed-by-default-on-the-html5-details-e] */
    list-style: none;
    font-size: 1.5rem;
}

.info-symbol-container {
    border-radius: 50px;
    padding: 0.3em 0.4em;
    background-color: rgb(158, 77, 164);
    color: white;
    font-weight: 600;
}

.info-symbol-container:hover {
    filter: brightness(1.3);
}

/* End of Informartion mark styles */

/* Nav */

nav {
    border-bottom: 2px solid rgba(207, 162, 169, 0.5);
}

.navbar {
    min-height: var(--navbar-min-height);
}

@media screen and (min-height:1100px) {
    body {
        /* Shrink navbar height if on device such as an iPad Air */
        --navbar-min-height: 7vh;
    }
}

nav .navbar-nav {
    margin-left: auto;
}

.navbar-nav .nav-item {
    /* Makes it so that the .nav-link items border-left height will be relative to height of .nav-item */
    position: relative;
}

/* Nav items */

@media screen and (min-width:576px) {
    .navbar-nav .nav-item:not(:first-child)::after {
        /* Add the border left to nav-items */
        /* Reminded myself how to use ":before" to make a line using w3docs [https://www.w3docs.com/snippets/css/how-to-add-lines-before-and-after-heading-text.html#:~:text=We%20will%20add%20a%20line,line%20according%20to%20your%20text.] */

        --nav-item_border-left-height: 40%;

        /* Sets border height to variable */
        height: var(--nav-item_border-left-height);

        /* Works out how to center it by diving the avaible space by 2 */
        top: calc((100% - var(--nav-item_border-left-height))/2);

        content: "";
        position: absolute;
        border-left: 1px solid black;
    }
}

.navbar-nav>.nav-item>.nav-link {
    padding: 3px 8px;
    margin: 0 5px;

    color: rgba(0, 0, 0, 0.8);
    min-width: 70px;
    text-align: center;
}

.navbar-nav>.nav-item>.nav-link.active {
    background-color: rgba(255, 255, 255, 0.35);
    box-shadow: 100px #ffff;
    color: black;
}

/* Nav dropdown menu */
.dropdown-menu {
    right: 0;
    margin: auto;
    border-top: none;
    border: none;
    background-color: #fff6f7;
    /* box-shadow: 0px 0px 7px #c4a4a4; */
    border-top: 5px solid transparent;
    border-radius: 0;
}

.dropdown-menu[data-bs-popper] {
    left: initial;
}

.dropdown-item:hover {
    background-color: #e1b6d250;
}

.dropdown-menu.show {
    margin-top: 0;
}

/* Make nav dropdown appear on hover [https://bootstrap-menu.com/detail-basic-hover.html] */
/* I modified this so it detects whether the device pointer can hover (essentially it will be: true if has mouse [and therefore can hover], false if has touchscreen) [https://css-irl.info/detecting-hover-capable-devices/] */
@media (hover: hover) {
    .navbar .nav-item .dropdown-menu:not(.show) {
        display: none;
    }

    .navbar .nav-item:hover .dropdown-menu {
        display: block;
    }

    .navbar-nav>.nav-item>.nav-link:hover,
    .navbar-nav>.nav-item>.nav-link.show--hover {
        background-color: rgba(255, 255, 255, 0.5);
        box-shadow: 0px 0px 7px #ffff;
        color: black;
    }
}

.navbar-nav>.nav-item>.nav-link.show {
    background-color: rgba(255, 255, 255, 0.5);
    box-shadow: 0px 0px 7px #ffff;
    color: black;
}


/* ! Nav dropdown menu */

/* ! Nav items */

article>section {
    margin: 0.7rem 0;
}

hr.seperator {
    height: 4px;
    margin: 7.5px 0;
}

hr.space-seperator {
    height: 0px;
    margin: 1rem 0;
}

hr.space-seperator--medium {
    margin: 1.5rem 0
}

.hero {
    /* Make hero take rest of space left after the navbar */
    height: calc(100vh - var(--navbar-min-height));
    padding: 10px;
}

#homepage-hero {
    display: flex;
    flex-direction: column;
    justify-content: end;
}

.hero_tag-line_content>p::after {
    content: "\2713";
    position: absolute;
    margin-left: 6px;
}

.hero_tag-line_content>p {
    /* Forces the tag line words to wrap early because tick is made position absolute which affects the centering of text */
    /* I've done this by setting word-spacing to 100% of the viewport width */
    word-spacing: 100vw;
    font-size: 1.1rem;
    margin: 0;
}

.hero_tag-line>hr.seperator:last-child {
    margin-bottom: 0;
}

@media screen and (min-width:440px) {
    .hero_tag-line_content>p {
        font-size: 1.3rem;
    }
}

@media screen and (min-width:600px) {
    .hero_tag-line_content>p {
        /* Forces the tag line words to wrap early because tick is made position absolute which affects the centering of text */
        /* I've done this by setting word-spacing to 100% of the viewport width */
        word-spacing: initial;
        font-size: 1.3rem;
    }

    .hero_tag-line_content>p::after {
        position: initial;
        margin-left: 8px;
    }
}

.hero_tag-line {
    margin: 0 auto;
    width: 100%;
    max-width: 44.6rem;
}

.hero_tag-line_content {
    display: flex;
    justify-content: space-around;
    margin: 1rem 0;
}

.navbar {
    font-family: 'Assistant';
    font-weight: 500;
}

.navbar-container {
    position: relative;
}

.bg-img--nav {
    background-image: url(../images/crystal-bg.png);
    background-position-y: 47%;
    opacity: 0.65;
}

/* ! Nav */

/* Hero */

.section-container.hero-container {
    padding: 0;
}

.hero_image-container {
    overflow: hidden;
    max-width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
}

.hero-image {
    height: 100%;
    width: auto;
}

.section-container {
    text-align: center;
    position: relative;
    padding: 1.5rem;
}

.section-container {
    margin-bottom: var(--section-vertical-margin);
}

.section-container:before {
    content: "";
    position: absolute;
    z-index: -1;
    top: -20px;
    bottom: -20px;
    left: 0;
    right: 0px;
    background: url(../images/crystal-bg.png) fixed no-repeat;
    background-size: cover;
    background-position: -50px;
    opacity: 0.2;
    box-shadow: inset 0 0 30px 40px var(--body-bg-colour);
}

/* Keeps the homepage-hero's eye centered as the device width gets smaller */
@media screen and (max-width:670px) {
    #homepage-hero img {
        margin-left: 120px;
    }
}

/* ! Hero */

/* Main sections */

.section-header {
    margin-top: 1rem;
    margin-bottom: 1.5rem;
    position: relative;
    text-align: center;
    text-transform: capitalize;
}

@media screen and (min-width:992px) {
    .section-header {
        margin-bottom: 3rem;
    }
}

/* Diagram table styling */

.diagram {
    --diagram-cell-vertical-spacing: 15px;

    border-spacing: 20px 0;
    border-collapse: separate;
    max-width: 100%;
    margin: auto;
}

.diagram td {
    padding-top: var(--diagram-cell-vertical-spacing);
}

.diagram th {
    padding-bottom: var(--diagram-cell-vertical-spacing);
    border-bottom: 1px solid rgba(255, 192, 203, 0.488);
}

.diagram_img-container {
    overflow: hidden;
    width: 90%;
    margin: 0 auto;
    padding: 5px 0;
}

.diagram_img-container>img {
    width: 90%;
}

.diagram_img-container--rounded {
    border-radius: 30%;
}

.diagram_title {
    font-size: 1.2em;
    text-transform: capitalize;
    line-height: 1.3;

    margin-left: 10px;
    margin-right: 10px;
    margin-bottom: 0.33em;
}

.diagram_description {
    margin-bottom: 0;
    font-size: 0.95em;
}

@media screen and (min-width:992px) {
    .diagram {
        max-width: 700px;
    }
}

/* ! Diagram table styling */

/* Add-ons included */

#add-ons-included ul {
    padding: 10px 0;
    list-style: none;
}

#add-ons-included ul>li {
    margin-bottom: 10px;
}

/* ! Add-ons included */

@media screen and (min-width:576px) {
    .section-container {
        padding: 2.5rem 10vw;
    }
}

/* Frame spotlight */

/* ! Frame spotlight */

/* ! Main sections */

/* Footer */

.page-footer {
    position: relative;
    overflow: hidden;
}

.bg-img--footer {
    background: url(../images/crystal-bg.png) no-repeat right top;
    background-size: cover;
    transform: scaleY(-1);
    background-position-y: 96%;
    opacity: 0.75;
    background-attachment: fixed;
}

.page-footer {
    padding: 0.7rem;
}

.page-footer>.footer_container {
    position: relative;
    text-align: center;
    BACKGROUND-COLOR: rgba(255, 255, 255, 0.632);
}

.footer_inner-container {
    max-width: 800px;
    margin: auto;
    flex-wrap: inherit;
}

.page-footer .footer_column {
    padding: 0.8rem;
}

.page-footer p:last-of-type {
    margin-bottom: 0;
}

.page-footer {
    font-size: 0.8rem;
}

@media screen and (min-width:576px) {

    /* Footer styling */
    .page-footer {
        font-size: 1rem;
    }

    .footer_inner-container {
        flex-wrap: nowrap;
    }
}

.page-footer h5 {
    /* Based on what .page-footer font-size is set to */
    font-size: 1.2em;
    font-weight: 600;
}

.page-footer p {
    /* Based on what .page-footer font-size is set to */
    font-size: 1em;
}

/* ! Footer */

/* frames.html */

/* #frames-collage > .row > div { */

#frames-collage {
    /* This sets a variable for the spacing inbetween the frames cards and then removes the spacing from the top of the collage using minus margins */
    --frames-collage-vertical-spacing: 3rem;

    /* margin-bottom: calc(var(--frames-collage-vertical-spacing) * -1); */
}

#frames-collage>.row>div {
    margin-bottom: var(--frames-collage-vertical-spacing);
}

@media screen and (min-width:576px) {
    #frames-collage {
        --frames-collage-vertical-spacing: 5rem;
    }
}

.collage-card {
    display: flex;
    justify-content: flex-end;
    flex-direction: column;
    height: 100%;
}

#frames-collage h2 {
    margin-top: 1rem;
    border: solid rgba(0, 0, 0, 0.4);
    border-width: 1px 0;
    padding: 5px 0;
}

.collage-card_img {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 15px 0;
    padding: 10px;
}

/* ! frames.html */

/* about.html  */

@media screen and (max-height: 700px) {

    #about-section {
        /* Sets about-section to the remaining height after page-header and navbar height  */
        height: calc(100vh - var(--page-header-height) - var(--navbar-min-height));
        margin: 0;
    }
}

#about-section {
    margin-bottom: 10vh;
}

#about-section>.section-container {
    padding: 10px;
}

#about-section img {
    max-width: 30vw;
    max-height: 45vh;
}

.about-section_text {
    padding: 2rem;
    align-items: center;
}

.about-section_text>p:last-child {
    margin: 0;
}

@media screen and (min-width:576px) {
    #about-section-container {
        display: flex;
        justify-content: center;
        align-items: center;
        max-width: 800px;
    }

    #about-section>.section-container {
        display: flex;
        justify-content: center;
    }
}

/* Location */
#location-section iframe {
    border: 2px solid green;
    width: 100%;
    min-height: 400px;
    max-width: 600px;
}

/* ! Location */

/* Contact form */

form {
    text-align: left;
    margin: auto;
    margin-bottom: 1.5rem;
    max-width: 650px;
}

form label {
    margin-bottom: 0.2rem;
    text-transform: capitalize;
}

form .form-group {
    margin-bottom: 1rem;
}

form input[type="submit"] {
    margin-top: 0.7em;
}

/* Form submitted confirmation */
#form-confirmation-section {}

/* ! Form submitted confirmation */

/* ! Contact form */

/* ! about.html */